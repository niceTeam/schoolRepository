<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisdomschool.student.mapper.GradeMapper">
    <!-- Grade的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Grade_Map" type="com.wisdomschool.student.pojo.Grade">
        <id column="gId" jdbcType="INTEGER" property="gid" />
        <result column="gName" jdbcType="VARCHAR" property="gname" />
    </resultMap>

    <!-- 数据库中表名为:grade的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="grade_Column">
        grade.gId as gId
        ,grade.gName as gName
    </sql>

    <!--获得类名为:Grade对应的数据库表的数据总行数 -->
    <select id="getGradeRowCount" resultType="java.lang.Long">
        select count(gId) from grade
    </select>
    <!-- 获得类名为:Grade对应数据库中表的数据集合 -->
    <select id="selectGrade" resultMap="result_Grade_Map">
        select 
        <include refid="grade_Column" /> 
        from grade
    </select> 

    <!-- 获得一个Grade对象,以参数Grade对象中不为空的属性作为条件进行查询-->
    <select id="selectGradeByObj" parameterType="com.wisdomschool.student.pojo.Grade" resultMap="result_Grade_Map">
        select 
            <include refid="grade_Column" /> 
        from grade
        <where>
            <if test="gname != null "> and grade.gName = #{gname,jdbcType=VARCHAR}</if>
            <if test="gid != null "> and grade.gId = #{gid,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过Grade的id获得对应数据库中表的数据对象-->
    <select id="selectGradeById" parameterType="java.lang.Integer" resultMap="result_Grade_Map">
        select 
            <include refid="grade_Column" /> 
        from grade
        where grade.gId = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将Grade插入到对应数据库的表中,包括属性值为null的数据-->

    <insert useGeneratedKeys="true" keyColumn="gId" keyProperty="gId" id="insertGrade" parameterType="com.wisdomschool.student.pojo.Grade">
        insert into grade(gId,gName) 
        values(#{gid,jdbcType=INTEGER},#{gname,jdbcType=VARCHAR})
    </insert>

    <!-- 将Grade中属性值不为null的数据,插入到对应数据库的表中-->
    <insert useGeneratedKeys="true" keyColumn="gId" keyProperty="gId" id="insertNonEmptyGrade" parameterType="com.wisdomschool.student.pojo.Grade">
        insert into grade
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="gid != null">gId,</if>
            <if test="gname != null">gName,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="gid != null"> #{gid,jdbcType=INTEGER},</if>
            <if test="gname != null"> #{gname,jdbcType=VARCHAR},</if>
        </trim>
    </insert>

    <!-- 通过Grade的id将数据库表中对应的数据删除-->
    <delete id="deleteGradeById" parameterType="java.lang.Integer">
        delete from grade
        where gId = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过Grade的id将Grade的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateGradeById" parameterType="com.wisdomschool.student.pojo.Grade">
        update grade set
            gName=#{gname,jdbcType=VARCHAR}
        where gId=#{gid,jdbcType=INTEGER}
    </update>

    <!-- 通过Grade的id将Grade中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyGradeById" parameterType="com.wisdomschool.student.pojo.Grade">
        update grade
        <set>
            <if test="gname != null">
                gName=#{gname,jdbcType=VARCHAR},
            </if>
        </set>
        where gId=#{gid,jdbcType=INTEGER}
    </update>

</mapper>