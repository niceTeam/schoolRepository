<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wisdomschool.student.mapper.ClassesMapper">
    <!-- Classes的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Classes_Map" type="com.wisdomschool.student.pojo.Classes">
        <id column="classId" jdbcType="INTEGER" property="classid" />
        <result column="cName" jdbcType="VARCHAR" property="cname" />
        <result column="gId" jdbcType="INTEGER" property="gid" />
    </resultMap>

    <!-- 数据库中表名为:classes的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="classes_Column">
        classes.classId as classId
        ,classes.cName as cName
        ,classes.gId as gId
    </sql>

    <!--获得类名为:Classes对应的数据库表的数据总行数 -->
    <select id="getClassesRowCount" resultType="java.lang.Long">
        select count(classId) from classes
    </select>
    <!-- 获得类名为:Classes对应数据库中表的数据集合 -->
    <select id="selectClasses" resultMap="result_Classes_Map">
        select 
        <include refid="classes_Column" /> 
        from classes
    </select> 

    <!-- 获得一个Classes对象,以参数Classes对象中不为空的属性作为条件进行查询-->
    <select id="selectClassesByObj" parameterType="com.wisdomschool.student.pojo.Classes" resultMap="result_Classes_Map">
        select 
            <include refid="classes_Column" /> 
        from classes
        <where>
            <if test="gid != null "> and classes.gId = #{gid,jdbcType=INTEGER}</if>
            <if test="cname != null "> and classes.cName = #{cname,jdbcType=VARCHAR}</if>
            <if test="classid != null "> and classes.classId = #{classid,jdbcType=INTEGER}</if>
        </where>
    </select> 

    <!-- 通过Classes的id获得对应数据库中表的数据对象-->
    <select id="selectClassesById" parameterType="java.lang.Integer" resultMap="result_Classes_Map">
        select 
            <include refid="classes_Column" /> 
        from classes
        where classes.classId = #{id,jdbcType=INTEGER}
    </select> 

    <!-- 将Classes插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertClasses" parameterType="com.wisdomschool.student.pojo.Classes">
        insert into classes(classId,cName,gId) 
        values(#{classid,jdbcType=INTEGER},#{cname,jdbcType=VARCHAR},#{gid,jdbcType=INTEGER})
    </insert>

    <!-- 将Classes中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyClasses" parameterType="com.wisdomschool.student.pojo.Classes">
        insert into classes
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="classid != null">classId,</if>
            <if test="cname != null">cName,</if>
            <if test="gid != null">gId,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="classid != null"> #{classid,jdbcType=INTEGER},</if>
            <if test="cname != null"> #{cname,jdbcType=VARCHAR},</if>
            <if test="gid != null"> #{gid,jdbcType=INTEGER},</if>
        </trim>
    </insert>

    <!-- 通过Classes的id将数据库表中对应的数据删除-->
    <delete id="deleteClassesById" parameterType="java.lang.Integer">
        delete from classes
        where classId = #{id,jdbcType=INTEGER}
    </delete>

    <!-- 通过Classes的id将Classes的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateClassesById" parameterType="com.wisdomschool.student.pojo.Classes">
        update classes set
            cName=#{cname,jdbcType=VARCHAR}
            ,gId=#{gid,jdbcType=INTEGER}
        where classId=#{classid,jdbcType=INTEGER}
    </update>

    <!-- 通过Classes的id将Classes中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyClassesById" parameterType="com.wisdomschool.student.pojo.Classes">
        update classes
        <set>
            <if test="cname != null">
                cName=#{cname,jdbcType=VARCHAR},
            </if>
            <if test="gid != null">
                gId=#{gid,jdbcType=INTEGER},
            </if>
        </set>
        where classId=#{classid,jdbcType=INTEGER}
    </update>

</mapper>